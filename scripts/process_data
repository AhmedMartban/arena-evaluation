#!/usr/bin/env python3

import argparse
import enum
import os
import rospkg

import yaml

import arena_evaluation.metrics as metrics
import arena_evaluation.utils as utils

if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("path")

    args = parser.parse_args()

    class Key(str, enum.Enum):
        Contestant = enum.auto()
        Stage = enum.auto()
        Robot = enum.auto()

    all_metrics = utils.MultiDict[metrics.PedsimMetrics](Key.Contestant, Key.Stage, Key.Robot)

    base_path = os.path.join(rospkg.RosPack().get_path("arena-evaluation"), "data", args.path)
    
    for contestant in next(os.walk(os.path.join(base_path)))[1]:
        for stage in next(os.walk(os.path.join(base_path, contestant)))[1]:
            for robot in next(os.walk(os.path.join(base_path, contestant, stage)))[1]:
                all_metrics.insert(
                    (contestant, stage, robot),
                    metrics.PedsimMetrics(dir = os.path.join(base_path, contestant, stage, robot))
                )


    # with open(os.path.join("plot_declarations", args.declaration_file)) as file:
    #     declaration_file = yaml.safe_load(file)


    # create_plots_from_declaration_file(declaration_file)